version: '3.8'

services:
  db:
    image: ankane/pgvector
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data/
    networks:
      - mynetwork
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fastapi_pgadmin4
    restart: always
    environment:
        PGADMIN_DEFAULT_EMAIL: ***     
        PGADMIN_DEFAULT_PASSWORD: ***                    
        PGADMIN_LISTEN_PORT: 80                             
    ports:
        - "${PGADMIN_PORT}:80"                                        
    networks:
      - mynetwork
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8014:8014"
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db
    volumes:
      - ./app:/app/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8014", "--reload"]
    networks:
      - mynetwork

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8502:8501"
    environment:
      FASTAPI_URL: http://api:8014
    depends_on:
      - api
    volumes:
      - ./ui:/app/ui
    command: ["streamlit", "run", "/app/ui/streamlit_app.py"]
    networks:
      - mynetwork

volumes:
  db_data:

networks:
  mynetwork:
